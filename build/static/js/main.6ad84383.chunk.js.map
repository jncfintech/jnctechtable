{"version":3,"sources":["Jnctable.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Jnctable","a3","a1","map","t1","Object","objectSpread","a2","find","t2","ID","count","DisplayData","info","react_default","a","createElement","Name","Package","Topup","Amount","Status","Date","BankName","BankAccNo","IFSC","AccHolderName","class","Table","Fragment","src_Jnctable","App","className","src_Table","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"6h1iCAmEeA,EA/DE,WACb,IAAMC,EAAKC,EAAGC,IAAI,SAAAC,GAAE,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GAAUD,EAAOG,EAAGC,KAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAON,EAAGM,QAC5DC,EAAQ,EACNC,EAAcX,EAAGE,IACnB,SAACU,GACG,OAEIC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKL,KACLG,EAAAC,EAAAC,cAAA,UAAKH,EAAKH,IACVI,EAAAC,EAAAC,cAAA,UAAKH,EAAKI,MACVH,EAAAC,EAAAC,cAAA,UAAKH,EAAKK,SACVJ,EAAAC,EAAAC,cAAA,UAAKH,EAAKM,OACVL,EAAAC,EAAAC,cAAA,UAAKH,EAAKO,QACVN,EAAAC,EAAAC,cAAA,UAAKH,EAAKQ,QACVP,EAAAC,EAAAC,cAAA,UAAKH,EAAKS,MACVR,EAAAC,EAAAC,cAAA,UAAKH,EAAKU,UACVT,EAAAC,EAAAC,cAAA,UAAKH,EAAKW,WACVV,EAAAC,EAAAC,cAAA,UAAKH,EAAKY,MACVX,EAAAC,EAAAC,cAAA,UAAKH,EAAKa,kBAS1B,OACIZ,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,SAAOW,MAAM,uBACTb,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aAGKJ,MChCNgB,EAjBD,WAKZ,OACEd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KAKCf,EAAAC,EAAAC,cAACc,EAAQ,QCFCC,MATf,WACE,OACEjB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAACiB,EAAK,QCGGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,WAAU,KACftC,EAAAC,EAAAC,cAACqC,EAAG,QAORnB","file":"static/js/main.6ad84383.chunk.js","sourcesContent":["import React from 'react'\r\nimport a1 from './Confirmlist.json'\r\nimport a2 from './bankAccount.json'\r\n\r\nconst Jnctable = () => {\r\n    const a3 = a1.map(t1 => ({ ...t1, ...a2.find(t2 => t2.ID === t1.ID)     }))\r\n    let count = 1;\r\n    const DisplayData = a3.map(\r\n        (info) => {\r\n            return (\r\n\r\n                <tr>\r\n                    <td>{count++}</td>\r\n                    <td>{info.ID}</td>\r\n                    <td>{info.Name}</td>\r\n                    <td>{info.Package}</td>\r\n                    <td>{info.Topup}</td>\r\n                    <td>{info.Amount}</td>\r\n                    <td>{info.Status}</td>\r\n                    <td>{info.Date}</td>\r\n                    <td>{info.BankName}</td>\r\n                    <td>{info.BankAccNo}</td>\r\n                    <td>{info.IFSC}</td>\r\n                    <td>{info.AccHolderName}</td>\r\n\r\n\r\n                </tr>\r\n            )\r\n        }\r\n\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {/* <input type=\"date\" value /> */}\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>S.no.</th>\r\n                        <th>Member ID</th>\r\n                        <th>Name</th>\r\n                        <th>Package</th>\r\n                        <th>Topup</th>\r\n                        <th>Amount</th>\r\n                        <th>Status</th>\r\n                        <th>Date&time</th>\r\n                        <th>Bank Name</th>\r\n                        <th>Account</th>\r\n                        <th>IFSC</th>\r\n                        <th>Holder Name</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n\r\n                    {DisplayData}\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Jnctable","import React from 'react'\r\n// import JsonDisplay from './JsonDisplay';\r\nimport Jnctable from './Jnctable';\r\n\r\n\r\n\r\nconst Table = () => {\r\n//  var d = new Date();\r\n//  var dam = Math.floor(d.getTime()/1000);\r\n\r\n//  console.log(dam);\r\n  return (\r\n    <>\r\n   \r\n    {/* <div>Table</div> */}\r\n\r\n    {/* <JsonDisplay /> */}\r\n    {<Jnctable />}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Table","import './App.css';\nimport React from 'react';\nimport Table from './Table';\n// import { Social } from './Social';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table /> \n      {/* <Social /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}